{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../hr.service\";\nimport * as i2 from \"../../common/navbar/navbar/navbar.component\";\nimport * as i3 from \"../../common/footer/footer/footer.component\";\nimport * as i4 from \"primeng/inputtextarea\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"primeng/dropdown\";\nexport let AddNewEmployeeComponent = /*#__PURE__*/(() => {\n  class AddNewEmployeeComponent {\n    constructor(hrService) {\n      this.hrService = hrService;\n      this.myform = new FormGroup({\n        name: new FormControl('', [Validators.required, Validators.minLength(8)]),\n        email: new FormControl('', [Validators.required, Validators.email]),\n        role: new FormControl('', [Validators.required]),\n        salary: new FormControl('', [Validators.required]),\n        phone: new FormControl('', [Validators.required, Validators.maxLength(11), Validators.minLength(11)])\n      });\n    }\n    ngOnInit() {\n      this.hrService.allRoles().subscribe(roles => {\n        this.roles = roles;\n      });\n    }\n    getName() {\n      return this.myform.get(\"name\")?.value;\n    }\n    getEmail() {\n      return this.myform.get(\"email\")?.value;\n    }\n    getSalary() {\n      return this.myform.get(\"salary\")?.value;\n    }\n    getrole() {\n      let converRoleToArray = [];\n      converRoleToArray.push(this.myform.get(\"role\")?.value);\n      return converRoleToArray;\n    }\n    getPhone() {\n      return this.myform.get(\"phone\")?.value;\n    }\n    submit() {\n      //put a pop up on success scenario\n      this.hrService.saveUser(this.getName(), this.getEmail(), this.getPhone(), this.getSalary(), this.getrole());\n    }\n  }\n  AddNewEmployeeComponent.ɵfac = function AddNewEmployeeComponent_Factory(t) {\n    return new (t || AddNewEmployeeComponent)(i0.ɵɵdirectiveInject(i1.HrService));\n  };\n  AddNewEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddNewEmployeeComponent,\n    selectors: [[\"app-add-new-employee\"]],\n    decls: 40,\n    vars: 15,\n    consts: [[1, \"card\", \"container\", 2, \"margin-top\", \"10px\"], [1, \"card-header\", \"text-center\", \"lead\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card-body\", \"row\"], [1, \"col-12\", \"row\"], [1, \"col-2\"], [\"for\", \"name\", 1, \"lead\"], [1, \"col-10\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"pInputTextarea\", \"\", \"name\", \"name\", \"required\", \"\", \"placeholder\", \"Enter employee name\", 1, \"w-100\"], [\"for\", \"email\", 1, \"lead\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"pInputTextarea\", \"\", \"name\", \"email\", \"required\", \"\", \"placeholder\", \"Enter employee email\", 1, \"w-100\"], [\"formControlName\", \"role\", \"optionLabel\", \"name\", 3, \"options\"], [1, \"col-6\", \"row\"], [1, \"col-4\"], [\"for\", \"salary\", 1, \"lead\"], [1, \"col-8\"], [\"type\", \"number\", \"id\", \"salary\", \"formControlName\", \"salary\", \"pInputTextarea\", \"\", \"name\", \"salary\", \"required\", \"\", \"placeholder\", \"Enter employee salary\", 1, \"w-100\"], [\"for\", \"phone\", 1, \"lead\"], [\"type\", \"text\", \"id\", \"phone\", \"formControlName\", \"phone\", \"pInputTextarea\", \"\", \"name\", \"phone\", \"required\", \"\", \"placeholder\", \"Enter employee phone\", 1, \"w-100\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-danger\", 2, \"width\", \"50%\", \"margin-top\", \"5px\", 3, \"disabled\"]],\n    template: function AddNewEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-navbar\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1);\n        i0.ɵɵtext(3, \"Add New Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AddNewEmployeeComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Employee name : \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"div\", 5)(14, \"label\", 9);\n        i0.ɵɵtext(15, \"Employee email : \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 7);\n        i0.ɵɵelement(17, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"div\", 5)(20, \"label\", 9);\n        i0.ɵɵtext(21, \"Employee Role : \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 7);\n        i0.ɵɵelement(23, \"p-dropdown\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 12)(25, \"div\", 13)(26, \"label\", 14);\n        i0.ɵɵtext(27, \"Employee salary : \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 15);\n        i0.ɵɵelement(29, \"input\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 12)(31, \"div\", 13)(32, \"label\", 17);\n        i0.ɵɵtext(33, \"Employee Phone :\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 15);\n        i0.ɵɵelement(35, \"input\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"div\", 19)(37, \"button\", 20);\n        i0.ɵɵtext(38, \"Submit\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(39, \"app-footer\");\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_4_0;\n        let tmp_5_0;\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.myform);\n        i0.ɵɵadvance(7);\n        i0.ɵɵclassMap(((tmp_1_0 = ctx.myform.get(\"name\")) == null ? null : tmp_1_0.errors) && ((tmp_1_0 = ctx.myform.get(\"name\")) == null ? null : tmp_1_0.touched) ? \"ng-dirty ng-invalid\" : \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵclassMap(((tmp_2_0 = ctx.myform.get(\"email\")) == null ? null : tmp_2_0.errors) && ((tmp_2_0 = ctx.myform.get(\"email\")) == null ? null : tmp_2_0.touched) ? \"ng-dirty ng-invalid\" : \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"options\", ctx.roles);\n        i0.ɵɵadvance(6);\n        i0.ɵɵclassMap(((tmp_4_0 = ctx.myform.get(\"salary\")) == null ? null : tmp_4_0.errors) && ((tmp_4_0 = ctx.myform.get(\"salary\")) == null ? null : tmp_4_0.touched) ? \"ng-dirty ng-invalid\" : \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵclassMap(((tmp_5_0 = ctx.myform.get(\"phone\")) == null ? null : tmp_5_0.errors) && ((tmp_5_0 = ctx.myform.get(\"phone\")) == null ? null : tmp_5_0.touched) ? \"ng-dirty ng-invalid\" : \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.myform.valid);\n      }\n    },\n    dependencies: [i2.NavbarComponent, i3.FooterComponent, i4.InputTextarea, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i6.Dropdown, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\"[_nghost-%COMP%]     .p-dropdown{width:100%}\"]\n  });\n  return AddNewEmployeeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}