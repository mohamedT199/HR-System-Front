{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"primeng/api\";\nexport let HomeService = /*#__PURE__*/(() => {\n  class HomeService {\n    constructor(http, messageService) {\n      this.http = http;\n      this.messageService = messageService;\n    }\n    addHeaders() {\n      return new HttpHeaders({\n        'Content-Type': 'application/json;charset=UTF-8',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,HEAD,OPTIONS',\n        'Authorization': localStorage.getItem('token') + ''\n      });\n    }\n    signIn() {\n      let defaultConfig = {\n        headers: {\n          'Content-Type': 'application/json;',\n          'Authorization': localStorage.getItem(\"token\") + ''\n        }\n      };\n      console.log(localStorage.getItem('token'));\n      this.http.post(\"api/attendant/enter\", {}, {\n        headers: this.addHeaders()\n      }).subscribe(response => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Sign In Successfully',\n          detail: \"Wlecome \" + response.user.name\n        });\n      }, error => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Erorr',\n          detail: \"Sorry there was an erorr please try again later\"\n        });\n      });\n    }\n    signOut() {\n      this.http.post(\"api/attendant/leave\", {}, {\n        headers: this.addHeaders()\n      }).subscribe(response => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Sign Out Successfully',\n          detail: \"Bye Bye \" + response.user.name\n        });\n      }, error => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Erorr',\n          detail: \"Sorry there was an erorr please try again later\"\n        });\n      });\n    }\n  }\n  HomeService.ɵfac = function HomeService_Factory(t) {\n    return new (t || HomeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n  };\n  HomeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HomeService,\n    factory: HomeService.ɵfac,\n    providedIn: 'root'\n  });\n  return HomeService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}